/*
    DEFINITIONS for CSC488S Source Language Winter 2016
*/

package compiler488.parser;

// TODO: You can add Java import statements here as necessary

/*
    SYMBOL LISTS

    CUP reserved words are case-sensitive and cannot be used as names of
    terminals or non-terminals. This list includes the following:

        action code extends import init left non nonassoc nonterminal package
        parser precedence right scan start super terminal with

*/

// Keyword terminals returned by the scanner (with no value attached):
terminal AND, OR, NOT, TRUE, FALSE;
terminal BOOLEAN, INTEGER, FUNCTION, PROCEDURE;
terminal DO, ELSE, EXIT, IF;
terminal READ, REPEAT, RETURN, NEWLINE, THEN, UNTIL;
terminal VAR, WHEN, WHILE, WITH, WRITE;

// Special-character terminals (with no value attached):
terminal L_PAREN, R_PAREN, L_SQUARE, R_SQUARE, L_CURLEY, R_CURLEY;
terminal EQUAL, GREATER, LESS, COMMA, DOT, QUESTION, COLON;
terminal PLUS, MINUS, TIMES, DIVIDE;

// Terminals returned by the scanner that carry a value of a specific Java type:
terminal String     IDENT;
terminal Integer    INTCONST;
terminal String     TEXTCONST;

/*
    To define non-terminals that return no value:

        nonterminal nameList;

    To define non-terminals that do return a value (think AST generation):

        nonterminal JavaType nameList;
*/

nonterminal program, scope, variable, expression, statement, statement_list,
            output, output_list, declaration, declaration_list, bound, generalBound,
            variablenames, variablenames_list, variablename, arrayname, type;

precedence left COMMA;
precedence left PLUS, MINUS;
precedence left DIVIDE, TIMES;
precedence left AND, OR, EQUAL, NOT, LESS, GREATER;
precedence nonassoc ELSE;
precedence nonassoc IF;
precedence right WRITE;
precedence right IDENT;
precedence left GREATER;
precedence left LESS;
precedence left EQUAL;
precedence right VAR;

/*
    GRAMMAR SECTION
*/

// This specifies the initial symbol of the grammar.
start with program;

/*
    Notice that sometimes the action must be inside the production rule, not after
    it. This is a subtle yet significant difference from YACC. This is because the
    CUP parser is looking ahead one token. It ALWAYS reads one more token before it
    will act on the production.
 */

// The main program.
program ::= scope;

statement_list ::= statement
    | statement_list statement;

statement ::= variable COLON EQUAL expression
    | WRITE output_list;

expression ::= INTCONST
    | MINUS expression
    | expression PLUS expression
    | expression MINUS expression
    | expression TIMES expression
    | expression DIVIDE expression
    | TRUE
    | FALSE
    | NOT expression
    | expression AND expression
    | expression OR expression
    | expression EQUAL expression
    | expression NOT EQUAL expression
    | expression LESS expression
    | expression LESS EQUAL expression
    | expression GREATER expression
    | expression GREATER EQUAL expression
    | L_PAREN expression R_PAREN
    | L_PAREN expression QUESTION expression COLON expression R_PAREN
    | variable;

declaration_list ::= declaration
    | declaration_list declaration;

declaration ::= VAR variablenames_list COLON type;

output_list ::= output
    | output_list COMMA output;

output ::= expression
    | TEXTCONST
    | NEWLINE;

variablenames ::= variablename
    | variablename L_SQUARE bound R_SQUARE
    | variablename L_SQUARE bound COMMA bound R_SQUARE;

variablenames_list ::= variablenames
    | variablenames_list COMMA variablenames;

bound ::= INTCONST
    | generalBound DOT DOT generalBound;

generalBound ::= INTCONST
    | MINUS INTCONST;

variable ::= variablename
    | arrayname L_SQUARE expression R_SQUARE
    | arrayname L_SQUARE expression COMMA expression R_SQUARE;

scope ::= L_CURLEY declaration_list statement_list R_CURLEY
    | L_CURLEY statement_list R_CURLEY
    | L_CURLEY R_CURLEY;

type ::= INTEGER
    | BOOLEAN;

variablename ::= IDENT;

arrayname ::= IDENT;

/*****************************************************************************

  YOUR CAREFULLY CRAFTED GRAMMAR FOR THE CSC488S SOURCE LANGUAGE

    GOES HERE

****************************************************************************/

