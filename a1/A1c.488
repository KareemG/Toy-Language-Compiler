
{
    % A1c.488: Forms of loop and loop constructs
    % Author: Jasmeet Sidhu

    % test the repeat loop by counting to ten
    procedure count_to_ten
    {
        var i : integer
        i := 1

        repeat
        {
            write i
        }
        until (i > 10)
    }


    % test breaking out of loops using 'exit', 'return', and the condition itself
    procedure wait_for_numbers(a : integer, b : integer, c : integer)
    {
        var temp : integer
        var running : boolean

        running := true
        while running do
        {
            read temp

            if temp = a then
            {
                exit
            }
            else if temp = b then
            {
                running := false
            }
            else if temp = c then
            {
                return
            }
        }
    }

    % test the multi-loop exit statements using nested loops
    procedure break_out_of_loop
    {
        var temp : integer
        temp := 0

        write "try to break out of this loop"

        while true do
        {
            write "enter loop 1"

            while true do
            {
                write "enter loop 2"

                while true do
                {
                    write "enter loop 3"

                    read temp

                    exit when (temp = 1)
                    exit 3 when (temp = 3)
                    exit 2
                } % loop 3
            } % loop 2
        } % loop 1

    } % procedure

    count_to_ten
    wait_for_numbers(1, 2, 3)
    break_out_of_loop
}
